package Controllers.Consultation;

import entities.Consultation;
import entities.Notification;
import javafx.scene.control.Alert;
import services.ServiceConsultation;
import services.ServiceNotification;

import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class UpcomingConsultationChecker {
    private final ServiceConsultation serviceConsultation;
    private final ServiceNotification serviceNotification;
    private final List<Notification> notifications;

    public UpcomingConsultationChecker(ServiceConsultation serviceConsultation, ServiceNotification serviceNotification) {
        this.serviceConsultation = serviceConsultation;
        this.serviceNotification = serviceNotification;
        this.notifications = new ArrayList<>();
    }

    public void checkUpcomingConsultations() {
        try {
            List<Consultation> upcomingConsultations = serviceConsultation.getUpcomingConsultations();
            if (!upcomingConsultations.isEmpty()) {
                System.out.println("found upcoming consultations");
                for (Consultation consultation : upcomingConsultations) {
                    LocalDateTime now = LocalDateTime.now();
                    LocalDateTime consultationDateTime = consultation.getDateC();
                    if (now.plusHours(24).isAfter(consultationDateTime)) {
                        createNotification(consultation);
                    }
                }
               // showAlert(upcomingConsultations);
            } else {
                System.out.println("No upcoming consultations found.");
            }
        } catch (SQLException e) {
            // Handle the exception, e.g., log the error
        }
    }

    private void createNotification(Consultation consultation) {
        Notification notification = new Notification(
                0, // The ID will be auto-generated by the database
                consultation.getIdp(),
                "Upcoming Consultation",
                "Consultation for patient " + consultation.getIdp() + " on " + consultation.getDateC(),
                LocalDateTime.now(),
                false
        );

        try {
            serviceNotification.ajouter(notification);
            notifications.add(notification);
        } catch (SQLException e) {
            // Handle the exception, e.g., log the error
        }
    }

    private void showAlert(List<Consultation> upcomingConsultations) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("Upcoming Consultations");
        alert.setHeaderText("You have upcoming consultations in less than 24 hours:");
        StringBuilder message = new StringBuilder();
        for (Consultation consultation : upcomingConsultations) {
            message.append(consultation.toString()).append("\n");
        }
        alert.setContentText(message.toString());
        alert.showAndWait();
    }

    public List<Notification> getNotifications() {
        return notifications;
    }
}